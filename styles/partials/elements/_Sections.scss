@mixin section--heading-bottom-margin($m) {
  &.text--#{$m} + * {
    margin-top: var(--font-margin-bottom-#{$m});
  }

  &.text--#{$m} + *.mt-less {
    margin-top: var(--font-margin-bottom-#{$m}_less);
  }

  &.text--#{$m}.mb-less + * {
    margin-top: var(--font-margin-bottom-#{$m}_less);
  }
}

@mixin overview-graphic-scale {
  --w: calc(var(--mw) * var(--overview-graphic-scale)) !important;
  --h: calc(var(--mh) * var(--overview-graphic-scale)) !important;
}

@mixin has-e-col {
  flex-wrap: wrap;
  // @include md-down{
  // }
}

:root {
  --section-gap: 12.5rem;
  --section-gap_half: calc(var(--section-gap) / 2);

  @include xl-down {
    // --section-gap: 10rem;
  }

  @include md-down {
    --section-gap: 9rem;
  }
}

.pb-section-gap {
  padding-bottom: var(--section-gap);
}

.chapter {
  &--wrapper {
    position: relative;
    // padding-top: var(--section-gap);
    // padding-bottom: var(--section-gap);
  }
}

.section {
  --section-text-spacing: 1.25rem;
  --section-graphic-panel-pad: 2.5rem;

  --section_title-above-offset: -0.425rem;
  // --section-column-arrow-height: 1.7rem;

  &--wrapper {
    padding-top: var(--section-gap);
    position: relative;

    &.mt-less {
      padding-top: calc(var(--section-gap) * 0.5);
    }
    &.mt-less-2 {
      padding-top: calc(var(--section-gap) * 0.25);
    }
    &.mb-less {
      padding-bottom: calc(var(--section-gap) * 0.5);
    }
    &.mb-less-2 {
      padding-bottom: calc(var(--section-gap) * 0.25);
    }
  }

  @include flex-row;

  &--title {
    & + * {
      margin-top: var(--font-margin-bottom-h4);
    }
  }

  &--heading {
    @include section--heading-bottom-margin(h1);
    @include section--heading-bottom-margin(h2);
    @include section--heading-bottom-margin(h3);
    @include section--heading-bottom-margin(h4);

    &__title-above {
      margin-top: var(--section_title-above-offset);
    }
  }

  &--copy {
    @include flex-col-center;

    &__below {
    }
  }

  &--description {
    & > * + * {
      margin-top: var(--section-text-spacing);
    }

    & > * + *.mt-less {
      margin-top: calc(var(--section-text-spacing) * 0.15);
    }

    ol,
    ul {
      --counter-width: 1.5rem;

      & > * + * {
        margin-top: var(--section-text-spacing);
      }

      & > * + *.mt-less {
        margin-top: calc(var(--section-text-spacing) * 0.35);
      }

      list-style-position: inside;
    }

    li {
      span {
        display: block;
        margin-top: calc(var(--font-height-body) * -1);
        width: calc(100% - var(--counter-width));
        padding-left: var(--counter-width);
      }
    }

    &__color {
      @include b-rad;
      padding: 2.25rem;
    }
  }

  &--main {
    &.gap-main {
      --gap: calc(var(--section-text-spacing) * 2.15);
      gap: var(--gap);

      @include lg-down {
        --gap: calc(var(--section-text-spacing) * 1.85);
      }
    }

    @include flex-row;
    margin-top: calc(var(--section-text-spacing) * 1.5);
    @include lg-down {
      margin-top: calc(var(--section-text-spacing) * 1.35);
    }

    &.mt-less {
      margin-top: calc(var(--section-text-spacing) * 1.25);

      @include lg-down {
        margin-top: calc(var(--section-text-spacing) * 0.85);
      }
    }

    &__grid {
      display: grid;
    }

    &__title-above {
      margin-top: calc((var(--section_title-above-offset) * -1) + var(--font-margin-bottom-h4));
    }
    &__title-below {
      margin-top: 0rem;
    }
    &__no-head {
      margin-top: 0rem;
    }
    &__has-e-col {
      @include has-e-col;
    }
  }

  .column {
    // When you add a min width of any value to a column, preferably a value that it wont ever reach cause its such a small number, then the column's width appears to lock at the width it should be, i.e. 2 columns at 50% width, 3 columns at 33.3333%, and so on. not sure why! but it works!
    // min-width: 0.1rem;
    position: relative;
  }

  &__has-e-col {
    @include has-e-col;
  }
}

// Type variants

@mixin overview-section($sel) {
  @at-root .section__overview .section--#{$sel} {
    @content;
  }
}

.section {
  &__overview {
    @include root {
      --overview-graphic-scale: 1;
      --graphic-overview-opacity: 0.245;

      @include xl-down {
        --overview-graphic-scale: 0.9;
      }
      @include lg-down {
        --overview-graphic-scale: 0.85;
        --graphic-overview-opacity: 0.125;
      }
      @include md-down {
        --overview-graphic-scale: 0.95;
        --graphic-overview-opacity: 0.05;
      }
    }

    justify-content: space-between;
    --gap: 6rem;
    @include gap;

    @include lg-down {
      --gap: 4rem;
    }
    @include lg-down {
      position: relative;
    }

    @include overview-section(graphic) {
      @include overview-graphic-scale;
    }

    @include overview-section("graphic .mask") {
      @include lg-down {
        position: absolute;
        right: 0;
        $amt: 60%;
        top: $amt;
        transform: translateY(-$amt);
      }
    }

    @include overview-section(copy) {
      @include lg-down {
        min-width: 100%;
        max-width: 100%;
      }
    }
  }
}

// Color variants

.section {
  &__color,
  &__image {
    @include pad-y(var(--section-gap));

    &:not(.background__background) * {
      color: $col-background;
    }

    & + & {
      margin-top: 0;
    }
  }
}

.chapter {
  &__color {
    // TODO: fix this ugly ass selector
    & > * > *:not(.background__background) {
      * {
        color: $col-background;
      }

      .mask {
        background-color: $col-background;
      }
    }
  }
}

.background {
  &__color {
  }

  &__background {
    background-color: $col-background;
  }

  &__background-darker {
    background-color: $col-background_darker;

    // TODO: move this to a general class applied to all of these
    & + & {
      padding-top: 0;
    }
  }

  &__background-darkest {
    background-color: $col-background_darkest;

    & + & {
      padding-top: 0;
    }
  }

  &__primary {
    background-color: $col-primary;

    & + & {
      padding-top: 0;
    }
  }

  &__tertiary-makeright {
    background-color: $col-tertiary_makeright;

    & + & {
      padding-top: 0;
    }
  }

  &__tertiary {
    background-color: $col-tertiary;

    & + & {
      padding-top: 0;
    }
  }

  &__tertiary-light {
    background-color: $col-tertiary-light;

    & + & {
      padding-top: 0;
    }
  }
}

// .TEST----THING{
//   background-color:red;
//   transform: scale(20);
// }
